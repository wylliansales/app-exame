DELIMITER $$
CREATE
  /*[DEFINER = { user | CURRENT_USER }]*/
TRIGGER `app-exame`.`trg_history_delete` BEFORE DELETE
  ON `app-exame`.`services`
FOR EACH ROW BEGIN
  INSERT INTO services_history (`employee_id`, `description`, `exam_date`, `created_at`)
  VALUES (old.employee_id, old.observation, old.exam_date, NOW());
END$$
DELIMITER ;


DELIMITER $$
CREATE
  /*[DEFINER = { user | CURRENT_USER }]*/
TRIGGER `app-exame`.`trg_validar_user_insert` BEFORE INSERT
  ON `app-exame`.`users`
FOR EACH ROW BEGIN
  SET @name = new.name;
  IF (CHAR_LENGTH(@name) < 3) THEN
    SET new.name = NULL;
  END IF;
END$$
DELIMITER ;

DELIMITER $$
CREATE
  /*[DEFINER = { user | CURRENT_USER }]*/
TRIGGER `app-exame`.`trg_validar_user_update` BEFORE UPDATE
  ON `app-exame`.`users`
FOR EACH ROW BEGIN
  SET @name = new.name;
  IF (CHAR_LENGTH(@name) < 3) THEN
    SET new.name = NULL;
  END IF;
END$$
DELIMITER ;


DELIMITER $$
CREATE
PROCEDURE `app-exame`.`services_delete`()
  BEGIN
    SELECT employees.`name` AS employee, services_history.`description`, services_history.`exam_date`, services_history.`created_at`
    FROM services_history
      INNER JOIN employees ON employees.`id`=`services_history`.`employee_id`
      ORDER BY created_at DESC;
  END$$
DELIMITER ;